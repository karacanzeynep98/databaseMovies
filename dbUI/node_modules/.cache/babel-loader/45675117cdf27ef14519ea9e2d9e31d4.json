{"remainingRequest":"/Users/zeynepkaracan/Desktop/databaseProject/dbUI/node_modules/babel-loader/lib/index.js!/Users/zeynepkaracan/Desktop/databaseProject/dbUI/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zeynepkaracan/Desktop/databaseProject/dbUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zeynepkaracan/Desktop/databaseProject/dbUI/src/components/listMovies.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zeynepkaracan/Desktop/databaseProject/dbUI/src/components/listMovies.vue","mtime":1574448068163},{"path":"/Users/zeynepkaracan/Desktop/databaseProject/dbUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zeynepkaracan/Desktop/databaseProject/dbUI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zeynepkaracan/Desktop/databaseProject/dbUI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zeynepkaracan/Desktop/databaseProject/dbUI/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIGltcG9ydCBNb3ZpZURldGFpbHM/IGZyb20gJy4vQ2VudHVyeURldGFpbHMudnVlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImxpc3RNb3ZpZXMiLAogIHByb3BzOiBbInNlYXJjaEZvcm0iXSwKICBjb21wb25lbnRzOiB7Ly8gTW92aWVEZXRhaWxzLAogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gbW91bnRlZCQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGdldE1vdmllUmVzdWx0cyh0aGlzLnNlYXJjaEZvcm0pKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIHRoaXMuc2VhcmNoTW92aWVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgYWxlcnQoSlNPTi5zdHJpbmdpZnkodGhpcy5zZWFyY2hNb3ZpZXMpKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgbnVsbCwgdGhpcyk7CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VhcmNoTW92aWVzOiBbXQogICAgfTsKICB9Cn07IC8vTWFrZXMgdGhlIEFwaSBjYWxsIGZpcnN0IHRvIG15IHNlcnZlciB0aGFuIHRvIEhhcnZhcmQgQVBJCgpmdW5jdGlvbiBnZXRRdWVyeU9iamVjdHMob2JqZWN0X3VybCkgewogIHZhciByZXNwb25zZSwgZGF0YTsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGdldFF1ZXJ5T2JqZWN0cyQoX2NvbnRleHQyKSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGZldGNoKG9iamVjdF91cmwpKTsKCiAgICAgICAgY2FzZSAyOgogICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAocmVzcG9uc2UuanNvbigpKTsKCiAgICAgICAgY2FzZSA1OgogICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgYWxlcnQoJ0RJRCBJIEdFVCBEQVRBJyk7CiAgICAgICAgICBhbGVydChkYXRhKTsKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBkYXRhKTsKCiAgICAgICAgY2FzZSA5OgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgfQogICAgfQogIH0pOwp9CgpmdW5jdGlvbiBnZXRNb3ZpZVJlc3VsdHMocXVlcnlPYmplY3QpIHsKICB2YXIgZW5kcG9pbnQsIG9iamVjdF91cmwsIGxpc3RNb3ZpZXM7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBnZXRNb3ZpZVJlc3VsdHMkKF9jb250ZXh0MykgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgZW5kcG9pbnQgPSAnL2dldE1vdmllcyc7IC8vR0VUIFRIRSBVUkwgT1VUIE9GIFRIRSBJTlBVVFMKCiAgICAgICAgICBvYmplY3RfdXJsID0gZ2V0UXVlcnlVUkwocXVlcnlPYmplY3QsIGVuZHBvaW50KTsKICAgICAgICAgIGFsZXJ0KCdUSElTIElTIE1ZIFFVRVJZIFVSTCcpOwogICAgICAgICAgYWxlcnQoSlNPTi5zdHJpbmdpZnkob2JqZWN0X3VybCkpOyAvL0RPIFRIRSBBUEkgQ0FMTCBBTkQgR0VUIEFOIEFSUkFZIE9GIE9CSkVDVFMgKExJU1QgT0YgT0JKRUNUUykKCiAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGdldFF1ZXJ5T2JqZWN0cyhvYmplY3RfdXJsKSk7CgogICAgICAgIGNhc2UgNjoKICAgICAgICAgIGxpc3RNb3ZpZXMgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBsaXN0TW92aWVzKTsKCiAgICAgICAgY2FzZSA4OgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgfQogICAgfQogIH0pOwp9CgpmdW5jdGlvbiBnZXRRdWVyeVVSTChxdWVyeSwgZW5kcG9pbnQpIHsKICB2YXIgb2JqZWN0X3F1ZXJ5X1VSTCA9ICdodHRwOi8vbG9jYWxob3N0OjMwMDAnICsgZW5kcG9pbnQ7CiAgdmFyIG9iamVjdF91cmwgPSBuZXcgVVJMKG9iamVjdF9xdWVyeV9VUkwpOyAvL3VybCBvYmplY3QKCiAgT2JqZWN0LmtleXMocXVlcnkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgaWYgKHF1ZXJ5W2tleV0pIHsKICAgICAgb2JqZWN0X3VybC5zZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgcXVlcnlba2V5XSk7CiAgICB9CiAgfSk7CiAgcmV0dXJuIG9iamVjdF91cmw7Cn0="},{"version":3,"sources":["listMovies.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA,CAAA,YAAA,CAFA;AAGA,EAAA,UAAA,EAAA,CACA;AADA,GAHA;AAMA,EAAA,OANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAQA,eAAA,CAAA,KAAA,UAAA,CARA;;AAAA;AAQA,iBAAA,YARA;AAUA,YAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,YAAA,CAAA,CAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAGA;AAhBA,CAAA,C,CAmBA;;AACA,SAAA,eAAA,CAAA,UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEA,KAAA,CAAA,UAAA,CAFA;;AAAA;AAEA,UAAA,QAFA;AAAA;AAAA,0CAGA,QAAA,CAAA,IAAA,EAHA;;AAAA;AAGA,UAAA,IAHA;AAKA,UAAA,KAAA,CAAA,gBAAA,CAAA;AACA,UAAA,KAAA,CAAA,IAAA,CAAA;AANA,4CAQA,IARA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAA,eAAA,CAAA,WAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,UAAA,QAFA,GAEA,YAFA,EAIA;;AACA,UAAA,UALA,GAKA,WAAA,CAAA,WAAA,EAAA,QAAA,CALA;AAOA,UAAA,KAAA,CAAA,sBAAA,CAAA;AACA,UAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CAAA,CARA,CAUA;;AAVA;AAAA,0CAWA,eAAA,CAAA,UAAA,CAXA;;AAAA;AAWA,UAAA,UAXA;AAAA,4CAaA,UAbA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAA,WAAA,CAAA,KAAA,EAAA,QAAA,EAAA;AAEA,MAAA,gBAAA,GAAA,0BAAA,QAAA;AAEA,MAAA,UAAA,GAAA,IAAA,GAAA,CAAA,gBAAA,CAAA,CAJA,CAIA;;AAEA,EAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,GAAA,CAAA,EAAA;AACA,MAAA,UAAA,CAAA,YAAA,CAAA,MAAA,CAAA,GAAA,EAAA,KAAA,CAAA,GAAA,CAAA;AACA;AACA,GAJA;AAMA,SAAA,UAAA;AACA","sourcesContent":["<template>\n    <div class = \"movies-container\">\n        <div v-for=\"movie in searchMovies\" :key = \"movie.id\">\n            <b-button v-b-toggle=\"'collapse' + movie.id\" size=\"sm\" squared variant=\"outline-danger\"> {{movie.title}} </b-button>\n            <b-collapse :id=\"'collapse' + movie.id\">\n                <b-card> \n                    <p class=\"card-text\"> Movie title is {{movie.title}} </p>\n                    <p class=\"card-text\"> Movie id is {{movie.id}} </p>\n                    <p class=\"card-text\"> Is it an adult movie?: {{movie.adult}} </p>\n                    <p class=\"card-text\"> Movie original language is: {{movie.original_language}} </p>\n                    <p class=\"card-text\"> Movie details is: {{movie.overview}} </p>\n                </b-card>\n            </b-collapse>\n        </div>\n    </div>\n</template>\n\n<script>\n\n// import MovieDetails? from './CenturyDetails.vue'\n\nexport default {\n    name: \"listMovies\",\n    props: [\"searchForm\"],\n    components: {\n        // MovieDetails,\n    },\n    async mounted() {\n        //get URL\n        this.searchMovies = await getMovieResults(this.searchForm);\n\n        alert(JSON.stringify(this.searchMovies));\n    },\n    data() {\n        return {\n            searchMovies:[],\n    }\n  }\n}\n\n//Makes the Api call first to my server than to Harvard API\nasync function getQueryObjects(object_url) {\n    //making calls to MY API\n    const response = await fetch(object_url);\n    const data = await response.json();\n\n    alert('DID I GET DATA');\n    alert(data);\n\n    return data;\n}\n\nasync function getMovieResults(queryObject){\n\n    let endpoint = '/getMovies';\n\n    //GET THE URL OUT OF THE INPUTS\n    let object_url = getQueryURL(queryObject, endpoint);\n\n    alert('THIS IS MY QUERY URL');\n    alert(JSON.stringify(object_url));\n\n    //DO THE API CALL AND GET AN ARRAY OF OBJECTS (LIST OF OBJECTS)\n    const listMovies = await getQueryObjects(object_url);\n\n    return listMovies;\n\n}\n\nfunction getQueryURL(query, endpoint) {\n\n    let object_query_URL = 'http://localhost:3000' + endpoint;\n\n    let object_url = new URL(object_query_URL); //url object\n\n    Object.keys(query).forEach(key => {\n        if(query[key]){\n            object_url.searchParams.append(key, query[key]);\n        }\n    });\n\n    return object_url;\n}\n\n\n\n\n</script>"],"sourceRoot":"src/components"}]}